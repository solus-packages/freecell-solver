<PISI>
    <Source>
        <Name>freecell-solver</Name>
        <Homepage>https://fc-solve.shlomifish.org</Homepage>
        <Packager>
            <Name>F. von Gellhorn</Name>
            <Email>flinux@vongellhorn.ch</Email>
        </Packager>
        <License>MIT</License>
        <PartOf>programming.library</PartOf>
        <Summary xml:lang="en">C library for solving Freecell and similar games</Summary>
        <Description xml:lang="en">Freecell Solver is a library, written in C, for attempting to solve several variants of card Solitaire/Patience including Freecell, Baker’s Game, Seahaven Towers and Simple Simon.
</Description>
        <Archive type="binary" sha1sum="79eb0752a961b8e0d15c77d298c97498fbc89c5a">https://getsol.us/sources/README.Solus</Archive>
    </Source>
    <Package>
        <Name>freecell-solver</Name>
        <Summary xml:lang="en">C library for solving Freecell and similar games</Summary>
        <Description xml:lang="en">Freecell Solver is a library, written in C, for attempting to solve several variants of card Solitaire/Patience including Freecell, Baker’s Game, Seahaven Towers and Simple Simon.
</Description>
        <PartOf>programming.library</PartOf>
        <Files>
            <Path fileType="executable">/usr/bin/dbm-fc-solver</Path>
            <Path fileType="executable">/usr/bin/depth-dbm-fc-solver</Path>
            <Path fileType="executable">/usr/bin/fc-solve</Path>
            <Path fileType="executable">/usr/bin/fc_solve_find_index_s2ints.py</Path>
            <Path fileType="executable">/usr/bin/find-freecell-deal-index.py</Path>
            <Path fileType="executable">/usr/bin/freecell-solver-fc-pro-range-solve</Path>
            <Path fileType="executable">/usr/bin/freecell-solver-multi-thread-solve</Path>
            <Path fileType="executable">/usr/bin/freecell-solver-range-parallel-solve</Path>
            <Path fileType="executable">/usr/bin/gen-multiple-pysol-layouts</Path>
            <Path fileType="executable">/usr/bin/make_pysol_freecell_board.py</Path>
            <Path fileType="executable">/usr/bin/pi-make-microsoft-freecell-board</Path>
            <Path fileType="executable">/usr/bin/transpose-freecell-board.py</Path>
            <Path fileType="library">/usr/lib/libfreecell-solver.so.0</Path>
            <Path fileType="library">/usr/lib/libfreecell-solver.so.0.6.0</Path>
            <Path fileType="data">/usr/share/freecell-solver/presetrc</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/abra-kadabra.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/amateur-star.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/blue-yonder.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/children-playing-ball.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/conspiracy-theory.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/cookie-monster.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/cool-jives.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/crooked-nose.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/enlightened-ostrich.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/fools-gold.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/foss-nessy.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/gooey-unknown-thing.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/hello-world.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/john_galt_line-500.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/looking-glass.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/maliciously-obscure.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/micro-finance-improved.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/micro-finance.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/one-big-family.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/qualified-seed.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/rin-tin-tin.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/sand-stone.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/sentient-pearls.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/tea-for-two.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/the-iglu-cabal.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/three-eighty.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/toons-for-twenty-somethings.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/video-editing.sh</Path>
            <Path fileType="data">/usr/share/freecell-solver/presets/yellow-brick-road.sh</Path>
            <Path fileType="man">/usr/share/man/man6/dbm-fc-solver.6</Path>
            <Path fileType="man">/usr/share/man/man6/fc-solve-board_gen.6</Path>
            <Path fileType="man">/usr/share/man/man6/fc-solve.6</Path>
            <Path fileType="man">/usr/share/man/man6/freecell-solver-range-parallel-solve.6</Path>
            <Path fileType="man">/usr/share/man/man6/gen-multiple-pysol-layouts.6</Path>
            <Path fileType="man">/usr/share/man/man6/make_pysol_freecell_board.py.6</Path>
            <Path fileType="man">/usr/share/man/man6/pi-make-microsoft-freecell-board.6</Path>
            <Path fileType="man">/usr/share/man/man6/transpose-freecell-board.py.6</Path>
        </Files>
    </Package>
    <Package>
        <Name>freecell-solver-devel</Name>
        <Summary xml:lang="en">Development files for freecell-solver</Summary>
        <Description xml:lang="en">Freecell Solver is a library, written in C, for attempting to solve several variants of card Solitaire/Patience including Freecell, Baker’s Game, Seahaven Towers and Simple Simon.
</Description>
        <PartOf>programming.devel</PartOf>
        <RuntimeDependencies>
            <Dependency release="3">freecell-solver</Dependency>
        </RuntimeDependencies>
        <Files>
            <Path fileType="header">/usr/include/freecell-solver/config.h</Path>
            <Path fileType="header">/usr/include/freecell-solver/fcs_back_compat.h</Path>
            <Path fileType="header">/usr/include/freecell-solver/fcs_cl.h</Path>
            <Path fileType="header">/usr/include/freecell-solver/fcs_conf.h</Path>
            <Path fileType="header">/usr/include/freecell-solver/fcs_dllexport.h</Path>
            <Path fileType="header">/usr/include/freecell-solver/fcs_enums.h</Path>
            <Path fileType="header">/usr/include/freecell-solver/fcs_limit.h</Path>
            <Path fileType="header">/usr/include/freecell-solver/fcs_move.h</Path>
            <Path fileType="header">/usr/include/freecell-solver/fcs_pats_xy_param.h</Path>
            <Path fileType="header">/usr/include/freecell-solver/fcs_user.h</Path>
            <Path fileType="library">/usr/lib/libfreecell-solver.so</Path>
            <Path fileType="data">/usr/lib/pkgconfig/libfreecell-solver.pc</Path>
        </Files>
    </Package>
    <History>
        <Update release="3">
            <Date>2020-03-10</Date>
            <Version>5.20.1</Version>
            <Comment>Packaging update</Comment>
            <Name>F. von Gellhorn</Name>
            <Email>flinux@vongellhorn.ch</Email>
        </Update>
    </History>
</PISI>